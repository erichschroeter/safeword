#ifndef SAFEWORD_H
#define SAFEWORD_H

/*
 * Do not manually modify the VERSION defines; they are auto-generated
 */
#define VERSION_MAJOR @VERSION_MAJOR@
#define VERSION_MINOR @VERSION_MINOR@
#define VERSION_PATCH @VERSION_PATCH@
#define VERSION "@VERSION_MAJOR@.@VERSION_MINOR@.@VERSION_PATCH@"

#include <errno.h>
#include <sqlite3.h>

#define ESAFEWORD_ENV_NOT_SET	256
#define ESAFEWORD_DB_NOEXIST	ENOENT

int safeword_db_open(sqlite3 **handle);
int safeword_config(const char* key, const char* value);
int safeword_credential_add(sqlite3* handle, sqlite3_int64 *credential_id,
	const char *username, const char *password, const char *description);
int safeword_credential_remove(sqlite3* handle, sqlite3_int64 credential_id);
int safeword_credential_info(sqlite3* handle, sqlite3_int64 credential_id);
int safeword_tag_credential(sqlite3* handle, sqlite3_int64 credential_id, const char *tag);
int safeword_tag_info(sqlite3* handle, const char *tag);
int safeword_delete_tag(sqlite3* handle, const char *tag);
int safeword_rename_tag(sqlite3* handle, const char *old, const char *new);
int safeword_cp_username(sqlite3* handle, sqlite3_int64 credential_id, unsigned int ms);
int safeword_cp_password(sqlite3* handle, sqlite3_int64 credential_id, unsigned int ms);

#endif // SAFEWORD_H
